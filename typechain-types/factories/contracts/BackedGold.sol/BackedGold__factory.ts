/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BackedGold,
  BackedGoldInterface,
} from "../../../contracts/BackedGold.sol/BackedGold";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stablecoin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stableAmount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "redemptionQueue",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redemptionQueueLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "setBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stable",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002a4038038062002a408339818101604052810190620000379190620002bc565b336040518060400160405280600b81526020017f4261636b656420476f6c640000000000000000000000000000000000000000008152506040518060400160405280600581526020017f42474f4c440000000000000000000000000000000000000000000000000000008152508160039081620000b5919062000568565b508060049081620000c7919062000568565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000660565b60405180910390fd5b62000150816200018c60201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200067d565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002848262000257565b9050919050565b620002968162000277565b8114620002a257600080fd5b50565b600081519050620002b6816200028b565b92915050565b600060208284031215620002d557620002d462000252565b5b6000620002e584828501620002a5565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037057607f821691505b60208210810362000386576200038562000328565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003f07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003b1565b620003fc8683620003b1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000449620004436200043d8462000414565b6200041e565b62000414565b9050919050565b6000819050919050565b620004658362000428565b6200047d620004748262000450565b848454620003be565b825550505050565b600090565b6200049462000485565b620004a18184846200045a565b505050565b5b81811015620004c957620004bd6000826200048a565b600181019050620004a7565b5050565b601f8211156200051857620004e2816200038c565b620004ed84620003a1565b81016020851015620004fd578190505b620005156200050c85620003a1565b830182620004a6565b50505b505050565b600082821c905092915050565b60006200053d600019846008026200051d565b1980831691505092915050565b60006200055883836200052a565b9150826002028217905092915050565b6200057382620002ee565b67ffffffffffffffff8111156200058f576200058e620002f9565b5b6200059b825462000357565b620005a8828285620004cd565b600060209050601f831160018114620005e05760008415620005cb578287015190505b620005d785826200054a565b86555062000647565b601f198416620005f0866200038c565b60005b828110156200061a57848901518255600182019150602085019450602081019050620005f3565b868310156200063a578489015162000636601f8916826200052a565b8355505b6001600288020188555050505b505050505050565b6200065a8162000277565b82525050565b60006020820190506200067760008301846200064f565b92915050565b60805161238b620006b5600039600081816105140152818161092f01528181610b1301528181610c120152610f84015261238b6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637dc0d1d0116100c3578063a9059cbb1161007c578063a9059cbb14610381578063d96a094a146103b1578063db006a75146103cd578063dd62ed3e146103e9578063e78cea9214610419578063f2fde38b146104375761014d565b80637dc0d1d0146102cf578063893d20e8146102ed5780638da5cb5b1461030b5780638dd148021461032957806395d89b41146103455780639e6667bd146103635761014d565b8063313ce56711610115578063313ce5671461020c57806370a082311461022a578063715018a61461025a57806373688914146102645780637ad51f7e146102825780637adbf973146102b35761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd146101a057806322be3de1146101be57806323b872dd146101dc575b600080fd5b61015a610453565b60405161016791906119cf565b60405180910390f35b61018a60048036038101906101859190611a8a565b6104e5565b6040516101979190611ae5565b60405180910390f35b6101a8610508565b6040516101b59190611b0f565b60405180910390f35b6101c6610512565b6040516101d39190611b89565b60405180910390f35b6101f660048036038101906101f19190611ba4565b610536565b6040516102039190611ae5565b60405180910390f35b610214610565565b6040516102219190611c13565b60405180910390f35b610244600480360381019061023f9190611c2e565b61056e565b6040516102519190611b0f565b60405180910390f35b6102626105b6565b005b61026c6105ca565b6040516102799190611c6a565b60405180910390f35b61029c60048036038101906102979190611c85565b6105f0565b6040516102aa929190611cb2565b60405180910390f35b6102cd60048036038101906102c89190611c2e565b610644565b005b6102d7610690565b6040516102e49190611c6a565b60405180910390f35b6102f56106b6565b6040516103029190611c6a565b60405180910390f35b6103136106c5565b6040516103209190611c6a565b60405180910390f35b610343600480360381019061033e9190611c2e565b6106ef565b005b61034d61073b565b60405161035a91906119cf565b60405180910390f35b61036b6107cd565b6040516103789190611b0f565b60405180910390f35b61039b60048036038101906103969190611a8a565b6107da565b6040516103a89190611ae5565b60405180910390f35b6103cb60048036038101906103c69190611c85565b6107fd565b005b6103e760048036038101906103e29190611c85565b610ca9565b005b61040360048036038101906103fe9190611cdb565b61101c565b6040516104109190611b0f565b60405180910390f35b6104216110a3565b60405161042e9190611c6a565b60405180910390f35b610451600480360381019061044c9190611c2e565b6110c9565b005b60606003805461046290611d4a565b80601f016020809104026020016040519081016040528092919081815260200182805461048e90611d4a565b80156104db5780601f106104b0576101008083540402835291602001916104db565b820191906000526020600020905b8154815290600101906020018083116104be57829003601f168201915b5050505050905090565b6000806104f061114f565b90506104fd818585611157565b600191505092915050565b6000600254905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061054161114f565b905061054e858285611169565b6105598585856111fe565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6105be6112f2565b6105c86000611379565b565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6009818154811061060057600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b61064c6112f2565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006106c06106c5565b905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106f76112f2565b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606004805461074a90611d4a565b80601f016020809104026020016040519081016040528092919081815260200182805461077690611d4a565b80156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b5050505050905090565b6000600980549050905090565b6000806107e561114f565b90506107f28185856111fe565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156108ab5750600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b6108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190611dc7565b60405180910390fd5b6000811161092d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092490611e33565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161098a93929190611e53565b6020604051808303816000875af11580156109a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cd9190611eb6565b610a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0390611f2f565b60405180910390fd5b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f9190611f64565b905060008111610ae4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adb90611fdd565b60405180910390fd5b600081670de0b6b3a764000084610afb919061202c565b610b05919061209d565b9050610b11338261143f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610b8e929190611cb2565b6020604051808303816000875af1158015610bad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd19190611eb6565b50600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc67f0000000000000000000000000000000000000000000000000000000000000000853385604051602001610c4592919061211a565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610c72939291906121ab565b600060405180830381600087803b158015610c8c57600080fd5b505af1158015610ca0573d6000803e3d6000fd5b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015610d575750600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b610d96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8d90611dc7565b60405180910390fd5b60008111610dd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd090611e33565b60405180910390fd5b610de333826114c1565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e769190611f64565b90506000670de0b6b3a76400008284610e8f919061202c565b610e99919061209d565b9050600960405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd9bbc67f000000000000000000000000000000000000000000000000000000000000000060003385604051602001610fb8929190612235565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610fe5939291906122ac565b600060405180830381600087803b158015610fff57600080fd5b505af1158015611013573d6000803e3d6000fd5b50505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110d16112f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111435760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161113a9190611c6a565b60405180910390fd5b61114c81611379565b50565b600033905090565b6111648383836001611543565b505050565b6000611175848461101c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156111f857818110156111e8578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016111df939291906122ea565b60405180910390fd5b6111f784848484036000611543565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112705760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112679190611c6a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e25760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016112d99190611c6a565b60405180910390fd5b6112ed83838361171a565b505050565b6112fa61114f565b73ffffffffffffffffffffffffffffffffffffffff166113186106c5565b73ffffffffffffffffffffffffffffffffffffffff16146113775761133b61114f565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161136e9190611c6a565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114b15760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016114a89190611c6a565b60405180910390fd5b6114bd6000838361171a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115335760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161152a9190611c6a565b60405180910390fd5b61153f8260008361171a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115b55760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016115ac9190611c6a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116275760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161161e9190611c6a565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611714578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161170b9190611b0f565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361176c5780600260008282546117609190612321565b9250508190555061183f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156117f8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016117ef939291906122ea565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361188857806002600082825403925050819055506118d5565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119329190611b0f565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561197957808201518184015260208101905061195e565b60008484015250505050565b6000601f19601f8301169050919050565b60006119a18261193f565b6119ab818561194a565b93506119bb81856020860161195b565b6119c481611985565b840191505092915050565b600060208201905081810360008301526119e98184611996565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a21826119f6565b9050919050565b611a3181611a16565b8114611a3c57600080fd5b50565b600081359050611a4e81611a28565b92915050565b6000819050919050565b611a6781611a54565b8114611a7257600080fd5b50565b600081359050611a8481611a5e565b92915050565b60008060408385031215611aa157611aa06119f1565b5b6000611aaf85828601611a3f565b9250506020611ac085828601611a75565b9150509250929050565b60008115159050919050565b611adf81611aca565b82525050565b6000602082019050611afa6000830184611ad6565b92915050565b611b0981611a54565b82525050565b6000602082019050611b246000830184611b00565b92915050565b6000819050919050565b6000611b4f611b4a611b45846119f6565b611b2a565b6119f6565b9050919050565b6000611b6182611b34565b9050919050565b6000611b7382611b56565b9050919050565b611b8381611b68565b82525050565b6000602082019050611b9e6000830184611b7a565b92915050565b600080600060608486031215611bbd57611bbc6119f1565b5b6000611bcb86828701611a3f565b9350506020611bdc86828701611a3f565b9250506040611bed86828701611a75565b9150509250925092565b600060ff82169050919050565b611c0d81611bf7565b82525050565b6000602082019050611c286000830184611c04565b92915050565b600060208284031215611c4457611c436119f1565b5b6000611c5284828501611a3f565b91505092915050565b611c6481611a16565b82525050565b6000602082019050611c7f6000830184611c5b565b92915050565b600060208284031215611c9b57611c9a6119f1565b5b6000611ca984828501611a75565b91505092915050565b6000604082019050611cc76000830185611c5b565b611cd46020830184611b00565b9392505050565b60008060408385031215611cf257611cf16119f1565b5b6000611d0085828601611a3f565b9250506020611d1185828601611a3f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d6257607f821691505b602082108103611d7557611d74611d1b565b5b50919050565b7f4261636b6564476f6c643a206e6f742077697265640000000000000000000000600082015250565b6000611db160158361194a565b9150611dbc82611d7b565b602082019050919050565b60006020820190508181036000830152611de081611da4565b9050919050565b7f4261636b6564476f6c643a20616d6f756e74207a65726f000000000000000000600082015250565b6000611e1d60178361194a565b9150611e2882611de7565b602082019050919050565b60006020820190508181036000830152611e4c81611e10565b9050919050565b6000606082019050611e686000830186611c5b565b611e756020830185611c5b565b611e826040830184611b00565b949350505050565b611e9381611aca565b8114611e9e57600080fd5b50565b600081519050611eb081611e8a565b92915050565b600060208284031215611ecc57611ecb6119f1565b5b6000611eda84828501611ea1565b91505092915050565b7f4261636b6564476f6c643a207472616e73666572206661696c65640000000000600082015250565b6000611f19601b8361194a565b9150611f2482611ee3565b602082019050919050565b60006020820190508181036000830152611f4881611f0c565b9050919050565b600081519050611f5e81611a5e565b92915050565b600060208284031215611f7a57611f796119f1565b5b6000611f8884828501611f4f565b91505092915050565b7f4261636b6564476f6c643a207072696365207a65726f00000000000000000000600082015250565b6000611fc760168361194a565b9150611fd282611f91565b602082019050919050565b60006020820190508181036000830152611ff681611fba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061203782611a54565b915061204283611a54565b925082820261205081611a54565b9150828204841483151761206757612066611ffd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006120a882611a54565b91506120b383611a54565b9250826120c3576120c261206e565b5b828204905092915050565b7f6275790000000000000000000000000000000000000000000000000000000000600082015250565b600061210460038361194a565b915061210f826120ce565b602082019050919050565b60006060820190508181036000830152612133816120f7565b90506121426020830185611c5b565b61214f6040830184611b00565b9392505050565b600081519050919050565b600082825260208201905092915050565b600061217d82612156565b6121878185612161565b935061219781856020860161195b565b6121a081611985565b840191505092915050565b60006060820190506121c06000830186611c5b565b6121cd6020830185611b00565b81810360408301526121df8184612172565b9050949350505050565b7f72656465656d0000000000000000000000000000000000000000000000000000600082015250565b600061221f60068361194a565b915061222a826121e9565b602082019050919050565b6000606082019050818103600083015261224e81612212565b905061225d6020830185611c5b565b61226a6040830184611b00565b9392505050565b6000819050919050565b600061229661229161228c84612271565b611b2a565b611a54565b9050919050565b6122a68161227b565b82525050565b60006060820190506122c16000830186611c5b565b6122ce602083018561229d565b81810360408301526122e08184612172565b9050949350505050565b60006060820190506122ff6000830186611c5b565b61230c6020830185611b00565b6123196040830184611b00565b949350505050565b600061232c82611a54565b915061233783611a54565b925082820190508082111561234f5761234e611ffd565b5b9291505056fea26469706673582212207c707199d61ad6fbc1172600ae6f4072ec1e8949facf577993ba3d79d413352064736f6c63430008180033";

type BackedGoldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BackedGoldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BackedGold__factory extends ContractFactory {
  constructor(...args: BackedGoldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    stablecoin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(stablecoin, overrides || {});
  }
  override deploy(
    stablecoin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(stablecoin, overrides || {}) as Promise<
      BackedGold & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BackedGold__factory {
    return super.connect(runner) as BackedGold__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BackedGoldInterface {
    return new Interface(_abi) as BackedGoldInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BackedGold {
    return new Contract(address, _abi, runner) as unknown as BackedGold;
  }
}
